name: Build Book

on:
  push:
    branches: [ main, master ]
    paths:
      - 'src/**'
      - 'scripts/**'
      - 'templates/**'
      - '.github/workflows/build-book.yml'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      scheme:
        description: 'Pronunciation scheme to use'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - cla
          - koi1
          - koi2
          - byz1
          - byz2

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        scheme: ${{ github.event.inputs.scheme == 'all' || github.event.inputs.scheme == '' || github.event_name != 'workflow_dispatch' && fromJSON('["cla", "koi1", "koi2", "byz1", "byz2"]') || fromJSON('["' + github.event.inputs.scheme + '"]') }}
        include:
          - scheme: cla
            scheme_name: "Classical"
          - scheme: koi1
            scheme_name: "Early Koine"
          - scheme: koi2
            scheme_name: "Late Koine"
          - scheme: byz1
            scheme_name: "Middle Byzantine"
          - scheme: byz2
            scheme_name: "Late Byzantine"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Lua
        run: |
          sudo apt-get update
          sudo apt-get install -y lua5.3
          sudo ln -sf /usr/bin/lua5.3 /usr/bin/lua

      - name: Install Pandoc
        run: |
          sudo apt-get install -y pandoc

      - name: Install LaTeX
        run: |
          sudo apt-get install -y texlive-xetex texlive-fonts-recommended texlive-fonts-extra

      - name: Install PDF tools
        run: |
          sudo apt-get install -y ghostscript pdftk poppler-utils

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install argparse

      - name: Build PDF
        run: |
          bash scripts/pdf_pron.sh --scheme ${{ matrix.scheme }}
          mv docs/lgpsi_pron.pdf docs/lgpsi_${{ matrix.scheme }}.pdf

      - name: Build HTML
        run: |
          bash scripts/html_pron.sh --scheme ${{ matrix.scheme }}

      - name: Build EPUB
        run: |
          bash scripts/ebook_pron.sh --scheme ${{ matrix.scheme }}
          mv docs/lgpsi_pron.epub docs/lgpsi_${{ matrix.scheme }}.epub

      - name: Upload PDF artifact
        uses: actions/upload-artifact@v4
        with:
          name: lgpsi-${{ matrix.scheme }}-pdf
          path: docs/lgpsi_${{ matrix.scheme }}.pdf
          retention-days: 7

      - name: Upload EPUB artifact
        uses: actions/upload-artifact@v4
        with:
          name: lgpsi-${{ matrix.scheme }}-epub
          path: docs/lgpsi_${{ matrix.scheme }}.epub
          retention-days: 7

      - name: Upload HTML artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lgpsi-${{ matrix.scheme }}-html
          path: docs/*.html
          retention-days: 7

      - name: Summary
        run: |
          echo "## Build Summary for ${{ matrix.scheme_name }} (${{ matrix.scheme }}) Pronunciation" >> $GITHUB_STEP_SUMMARY
          echo "✅ PDF: lgpsi_${{ matrix.scheme }}.pdf" >> $GITHUB_STEP_SUMMARY
          echo "✅ EPUB: lgpsi_${{ matrix.scheme }}.epub" >> $GITHUB_STEP_SUMMARY
          echo "✅ HTML files: Generated in docs/*.html" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Download the artifacts from the GitHub Actions run to access these files." >> $GITHUB_STEP_SUMMARY


